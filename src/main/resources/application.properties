logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

server.error.path=/error

mybatis.mapper-locations=classpath:/mappers/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

cloud.aws.credentials.access-key=${ACCESS_KEY}
cloud.aws.credentials.secret-key=${SECRET_KEY}

#버킷 이름
cloud.aws.s3.bucketName=zanit

#리전
cloud.aws.region.static=ap-northeast-2

#cloud formation 기능을 사용하지 않기 위함.
cloud.aws.stack.auto=false
spring.output.ansi.enabled=always

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# JPA Entity의 컬럼을 수정 될때마다 계속 업데이트
# create : SessionFactory 시작시 스키마를 삭제하고 다시 생성
# create-drop : SessionFactory 종료 시 스키마를 삭제
# update : SessionFactory 연결된 DB와 비교하여 추가된 항목은 추가 만약 같은 변수명이면 오류발생
# validate : SessionFactory 시작시 객체구성과 스키마가 다르다면 예외 발생
# none: 아무것도 안함
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDBDialect

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://svc.sel4.cloudtype.app:30722/zanit?characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234
#spring.datasource.url=jdbc:mariadb://${DB_HOST}:${DB_PORT}/zanit?characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}